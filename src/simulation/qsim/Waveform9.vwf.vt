// Copyright (C) 2021  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/16/2024 22:53:17"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          TESTE_UC
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module TESTE_UC_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [15:0] INS;
// wires                                               
wire [7:0] ADDR;
wire CLEAR_ADDR;
wire CLEAR_REG;
wire JMP;
wire LOAD_REG;
wire [1:0] OPERACAO;
wire [3:0] OPERANDO;
wire RG_IN;
wire RG_TO;

// assign statements (if any)                          
TESTE_UC i1 (
// port map - connection between master ports and signals/registers   
	.ADDR(ADDR),
	.CLEAR_ADDR(CLEAR_ADDR),
	.CLEAR_REG(CLEAR_REG),
	.INS(INS),
	.JMP(JMP),
	.LOAD_REG(LOAD_REG),
	.OPERACAO(OPERACAO),
	.OPERANDO(OPERANDO),
	.RG_IN(RG_IN),
	.RG_TO(RG_TO)
);
initial 
begin 
#1000000 $finish;
end 
// INS[ 15 ]
initial
begin
	INS[15] = 1'b0;
end 
// INS[ 14 ]
initial
begin
	INS[14] = 1'b0;
end 
// INS[ 13 ]
initial
begin
	INS[13] = 1'b0;
end 
// INS[ 12 ]
initial
begin
	INS[12] = 1'b0;
end 
// INS[ 11 ]
initial
begin
	INS[11] = 1'b1;
end 
// INS[ 10 ]
initial
begin
	INS[10] = 1'b0;
end 
// INS[ 9 ]
initial
begin
	INS[9] = 1'b0;
end 
// INS[ 8 ]
initial
begin
	INS[8] = 1'b0;
end 
// INS[ 7 ]
initial
begin
	INS[7] = 1'b0;
end 
// INS[ 6 ]
initial
begin
	INS[6] = 1'b0;
end 
// INS[ 5 ]
initial
begin
	INS[5] = 1'b0;
end 
// INS[ 4 ]
initial
begin
	INS[4] = 1'b0;
end 
// INS[ 3 ]
initial
begin
	INS[3] = 1'b0;
end 
// INS[ 2 ]
initial
begin
	INS[2] = 1'b0;
end 
// INS[ 1 ]
initial
begin
	INS[1] = 1'b0;
end 
// INS[ 0 ]
initial
begin
	INS[0] = 1'b0;
end 
endmodule

