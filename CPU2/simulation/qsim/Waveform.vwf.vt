// Copyright (C) 2021  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/29/2024 14:55:51"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          PRINCIPAL2_TESTE
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module PRINCIPAL2_TESTE_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
reg MASTER_CLR;
// wires                                               
wire [7:0] CNT;
wire JUMP;
wire [15:0] MEM;
wire [6:0] mem_d0;
wire [6:0] mem_d1;
wire [6:0] mem_d2;
wire [6:0] mem_d3;
wire [3:0] R1;
wire [3:0] R2;
wire [3:0] ULA_OUT;
wire ULA_WARN;

// assign statements (if any)                          
PRINCIPAL2_TESTE i1 (
// port map - connection between master ports and signals/registers   
	.CLK(CLK),
	.CNT(CNT),
	.JUMP(JUMP),
	.MASTER_CLR(MASTER_CLR),
	.MEM(MEM),
	.mem_d0(mem_d0),
	.mem_d1(mem_d1),
	.mem_d2(mem_d2),
	.mem_d3(mem_d3),
	.R1(R1),
	.R2(R2),
	.ULA_OUT(ULA_OUT),
	.ULA_WARN(ULA_WARN)
);
initial 
begin 
#18000000 $finish;
end 

// MASTER_CLR
initial
begin
	MASTER_CLR = 1'b1;
	MASTER_CLR = #1000000 1'b0;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #500000 1'b1;
	#500000;
end 
endmodule

